"use client";
import React, { useState, useRef } from "react";
import { Drawer, DrawerTrigger, DrawerContent, DrawerHeader, DrawerTitle, DrawerDescription, DrawerClose } from "@/components/ui/drawer";
import { motion, useInView } from "framer-motion";
import { X } from "lucide-react";
import { cn } from "@/lib/utils";
import { TextGenerateEffect } from "@/components/ui/text-generate-effect";
import { PointerHighlight } from "@/components/ui/pointer-highlight";

export function ProgramTimelineSection() {
  const [activeSection, setActiveSection] = useState<number>(0);
  const ref = useRef(null);
  const isInView = useInView(ref, { once: true, amount: 0.2 });

  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.3,
        delayChildren: 0.2
      }
    }
  };

  const headerVariants = {
    hidden: { opacity: 0, y: -60, scale: 0.9 },
    visible: {
      opacity: 1,
      y: 0,
      scale: 1,
      transition: {
        type: "spring" as const,
        stiffness: 100,
        damping: 15,
        duration: 0.8
      }
    }
  };

  const timelineVariants = {
    hidden: { opacity: 0, scaleY: 0 },
    visible: {
      opacity: 1,
      scaleY: 1,
      transition: {
        type: "spring" as const,
        stiffness: 80,
        damping: 20,
        duration: 1.5
      }
    }
  };

  const programSections = [
    {
      id: 0,
      phase: "Th√¥ng tin chung",
      title: "Ch∆∞∆°ng tr√¨nh ƒê√†o t·∫°o",
      subtitle: "T√†i ch√≠nh - Ng√¢n h√†ng TABP CLC",
      description: "Ch∆∞∆°ng tr√¨nh ƒë√†o t·∫°o ch·∫•t l∆∞·ª£ng cao v·ªõi th√†nh ph·∫ßn ti·∫øng Anh b√°n ph·∫ßn, ƒë∆∞·ª£c thi·∫øt k·∫ø theo ti√™u chu·∫©n qu·ªëc t·∫ø.",
      details: {
        vietnamese: "T√†i ch√≠nh ‚Äì Ng√¢n h√†ng; ti·∫øng Anh b√°n ph·∫ßn (CLC)",
        english: "Finance and Banking, partial English program (High-quality)",
        code: "7340201",
        level: "ƒê·∫°i h·ªçc",
        duration: "04 nƒÉm (08 h·ªçc k·ª≥)",
        format: "Ch√≠nh quy t·∫≠p trung",
        updated: "Th√°ng 6 nƒÉm 2024"
      },
      icon: "üéì",
      color: "from-blue-500 to-cyan-500",
      bgColor: "from-blue-50 to-cyan-50",
      position: "left",
      modalContent: (
        <div className="space-y-6">
          {/* Header v·ªõi gradient background */}
          <div className="p-6 rounded-t-2xl -m-6 mb-6">
            <div className="flex items-center gap-3 mb-3">
              <div className="text-3xl">üéì</div>
              <h3 className="text-2xl font-bold">Th√¥ng tin chung v·ªÅ Ch∆∞∆°ng tr√¨nh ƒê√†o t·∫°o</h3>
            </div>
            <p className="leading-relaxed">Ch∆∞∆°ng tr√¨nh ƒë√†o t·∫°o ch·∫•t l∆∞·ª£ng cao v·ªõi th√†nh ph·∫ßn ti·∫øng Anh b√°n ph·∫ßn, ƒë∆∞·ª£c thi·∫øt k·∫ø theo ti√™u chu·∫©n qu·ªëc t·∫ø.</p>
          </div>

          {/* Content v·ªõi improved layout */}
          <div className="px-6 pb-6 space-y-6">
            <div className="grid grid-cols-1 gap-6">
              {/* T√™n ch∆∞∆°ng tr√¨nh */}
              <div className="bg-gradient-to-br from-blue-50 to-cyan-50 p-5 rounded-xl border border-blue-100">
                <div className="flex items-center gap-2 mb-3">
                  <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                  <h4 className="font-bold text-slate-800 text-lg">T√™n ch∆∞∆°ng tr√¨nh</h4>
                </div>
                <div className="space-y-2">
                  <p className="text-slate-800 font-medium">{`T√†i ch√≠nh ‚Äì Ng√¢n h√†ng; ti·∫øng Anh b√°n ph·∫ßn (CLC)`}</p>
                  <p className="text-slate-600 italic text-sm">{`Finance and Banking, partial English program (High-quality)`}</p>
                </div>
              </div>

              {/* Th√¥ng tin c∆° b·∫£n */}
              <div className="bg-gradient-to-br from-slate-50 to-gray-50 p-5 rounded-xl border border-slate-200">
                <div className="flex items-center gap-2 mb-3">
                  <div className="w-2 h-2 bg-slate-500 rounded-full"></div>
                  <h4 className="font-bold text-slate-800 text-lg">Th√¥ng tin c∆° b·∫£n</h4>
                </div>
                <div className="space-y-3">
                  <div className="flex items-center gap-2">
                    <span className="text-xs bg-blue-100 text-blue-800 px-2 py-1 rounded-full font-medium">M√£ ng√†nh</span>
                    <span className="text-slate-700 font-medium">{`7340201`}</span>
                  </div>
                  <div className="flex items-center gap-2">
                    <span className="text-xs bg-green-100 text-green-800 px-2 py-1 rounded-full font-medium">Tr√¨nh ƒë·ªô</span>
                    <span className="text-slate-700 font-medium">{`ƒê·∫°i h·ªçc`}</span>
                  </div>
                  <div className="flex items-center gap-2">
                    <span className="text-xs bg-purple-100 text-purple-800 px-2 py-1 rounded-full font-medium">Th·ªùi gian</span>
                    <span className="text-slate-700 font-medium">{`04 nƒÉm (08 h·ªçc k·ª≥)`}</span>
                  </div>
                  <div className="flex items-center gap-2">
                    <span className="text-xs bg-orange-100 text-orange-800 px-2 py-1 rounded-full font-medium">H√¨nh th·ª©c</span>
                    <span className="text-slate-700 font-medium">{`Ch√≠nh quy t·∫≠p trung`}</span>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      )
    },
    {
      id: 1,
      phase: "M·ª•c ti√™u ch∆∞∆°ng tr√¨nh",
      title: "Program Objectives (PO)",
      subtitle: "ƒê·ªãnh h∆∞·ªõng ph√°t tri·ªÉn to√†n di·ªán",
      description: "Ph√°t tri·ªÉn sinh vi√™n th√†nh chuy√™n gia t√†i ch√≠nh ng√¢n h√†ng c√≥ nƒÉng l·ª±c qu·ªëc t·∫ø v√† th√≠ch ·ª©ng k·ªπ nguy√™n s·ªë.",
      objectives: [
        {
          type: "M·ª•c ti√™u chung (PO)",
          content: "N·∫Øm v·ªØng ki·∫øn th·ª©c n·ªÅn t·∫£ng hi·ªán ƒë·∫°i v·ªÅ kinh t·∫ø, ki·∫øn th·ª©c chuy√™n s√¢u v·ªÅ t√†i ch√≠nh ng√¢n h√†ng v·ªõi ph·∫©m ch·∫•t ƒë·∫°o ƒë·ª©c t·ªët v√† nƒÉng l·ª±c nghi√™n c·ª©u trong b·ªëi c·∫£nh h·ªôi nh·∫≠p qu·ªëc t·∫ø."
        },
        {
          type: "M·ª•c ti√™u c·ª• th·ªÉ (PO1)",
          content: "V·∫≠n d·ª•ng ki·∫øn th·ª©c khoa h·ªçc t·ª± nhi√™n, x√£ h·ªôi, c∆° b·∫£n v√† chuy√™n ng√†nh ƒë·ªÉ gi·∫£i quy·∫øt c√°c v·∫•n ƒë·ªÅ ph·ª©c t·∫°p trong lƒ©nh v·ª±c t√†i ch√≠nh ng√¢n h√†ng."
        }
      ],
      icon: "üéØ",
      color: "from-green-500 to-emerald-500",
      bgColor: "from-green-50 to-emerald-50",
      position: "right",
      modalContent: (
        <div className="space-y-6">
          {/* Header v·ªõi gradient background */}
          <div className="p-6 rounded-t-2xl -m-6 mb-6">
            <div className="flex items-center gap-3 mb-3">
              <div className="text-3xl">üéØ</div>
              <h3 className="text-2xl font-bold">M·ª•c ti√™u ch∆∞∆°ng tr√¨nh</h3>
            </div>
            <p className="leading-relaxed">Ph√°t tri·ªÉn sinh vi√™n th√†nh chuy√™n gia t√†i ch√≠nh ng√¢n h√†ng c√≥ nƒÉng l·ª±c qu·ªëc t·∫ø v√† th√≠ch ·ª©ng k·ªπ nguy√™n s·ªë.</p>
          </div>

          {/* Content v·ªõi improved layout */}
          <div className="px-6 pb-6 space-y-6">
            <div className="grid gap-6">
              {[
                {
                  type: "M·ª•c ti√™u chung (PO)",
                  content: "N·∫Øm v·ªØng ki·∫øn th·ª©c n·ªÅn t·∫£ng hi·ªán ƒë·∫°i v·ªÅ kinh t·∫ø, ki·∫øn th·ª©c chuy√™n s√¢u v·ªÅ t√†i ch√≠nh ng√¢n h√†ng v·ªõi ph·∫©m ch·∫•t ƒë·∫°o ƒë·ª©c t·ªët v√† nƒÉng l·ª±c nghi√™n c·ª©u trong b·ªëi c·∫£nh h·ªôi nh·∫≠p qu·ªëc t·∫ø.",
                  icon: "üåü",
                  color: "from-green-50 to-emerald-50",
                  borderColor: "border-green-200"
                },
                {
                  type: "M·ª•c ti√™u c·ª• th·ªÉ (PO1)",
                  content: "V·∫≠n d·ª•ng ki·∫øn th·ª©c khoa h·ªçc t·ª± nhi√™n, x√£ h·ªôi, c∆° b·∫£n v√† chuy√™n ng√†nh ƒë·ªÉ gi·∫£i quy·∫øt c√°c v·∫•n ƒë·ªÅ ph·ª©c t·∫°p trong lƒ©nh v·ª±c t√†i ch√≠nh ng√¢n h√†ng.",
                  icon: "üéØ",
                  color: "from-blue-50 to-cyan-50",
                  borderColor: "border-blue-200"
                }
              ].map((objective, objIndex) => (
                <div key={objIndex} className={`bg-gradient-to-br ${objective.color} p-6 rounded-xl border ${objective.borderColor} hover:shadow-lg transition-all duration-300`}>
                  <div className="flex items-start gap-4">
                    <div className="text-2xl flex-shrink-0 mt-1">{objective.icon}</div>
                    <div className="flex-1">
                      <h4 className="font-bold text-slate-800 text-lg mb-3 flex items-center gap-2">
                        <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                        {objective.type}
                      </h4>
                      <p className="text-slate-700 leading-relaxed text-base">{objective.content}</p>
                    </div>
                  </div>
                </div>
              ))}
            </div>

            {/* Additional info section */}
            <div className="bg-gradient-to-r from-amber-50 to-orange-50 p-5 rounded-xl border border-amber-200">
              <div className="flex items-center gap-2 mb-3">
                <div className="text-xl">üí°</div>
                <h4 className="font-bold text-slate-800">L∆∞u √Ω quan tr·ªçng</h4>
              </div>
              <p className="text-slate-700 text-sm leading-relaxed">
                Ch∆∞∆°ng tr√¨nh ƒë∆∞·ª£c thi·∫øt k·∫ø ƒë·ªÉ ƒë√°p ·ª©ng nhu c·∫ßu th·ª±c t·∫ø c·ªßa th·ªã tr∆∞·ªùng lao ƒë·ªông v√† xu h∆∞·ªõng ph√°t tri·ªÉn c·ªßa ng√†nh t√†i ch√≠nh ng√¢n h√†ng trong k·ª∑ nguy√™n s·ªë.
              </p>
            </div>
          </div>
        </div>
      )
    },
    {
      id: 2,
      phase: "C·∫•u tr√∫c ch∆∞∆°ng tr√¨nh",
      title: "Kh·ªëi ki·∫øn th·ª©c",
      subtitle: "N·ªÅn t·∫£ng v√† chuy√™n s√¢u",
      description: "Ch∆∞∆°ng tr√¨nh ƒë∆∞·ª£c t·ªï ch·ª©c theo c√°c kh·ªëi ki·∫øn th·ª©c khoa h·ªçc, c√¢n b·∫±ng gi·ªØa n·ªÅn t·∫£ng v√† chuy√™n m√¥n.",
      knowledgeBlocks: [
        {
          title: "Kh·ªëi ki·∫øn th·ª©c c∆° b·∫£n",
          subjects: [
            "Tri·∫øt h·ªçc M√°c - L√™nin",
            "Kinh t·∫ø ch√≠nh tr·ªã M√°c - L√™nin",
            "Ch·ªß nghƒ©a x√£ h·ªôi khoa h·ªçc",
            "L·ªãch s·ª≠ ƒê·∫£ng C·ªông s·∫£n Vi·ªát Nam",
            "T∆∞ t∆∞·ªüng H·ªì Ch√≠ Minh",
            "To√°n cao c·∫•p 1 & 2",
            "L√Ω thuy·∫øt x√°c su·∫•t v√† th·ªëng k√™",
            "Ph√°p lu·∫≠t ƒë·∫°i c∆∞∆°ng"
          ]
        },
        {
          title: "Kh·ªëi ki·∫øn th·ª©c chuy√™n ng√†nh",
          subjects: [
            "T√†i ch√≠nh doanh nghi·ªáp",
            "Ng√¢n h√†ng th∆∞∆°ng m·∫°i",
            "Th·ªã tr∆∞·ªùng t√†i ch√≠nh",
            "ƒê·∫ßu t∆∞ v√† qu·∫£n l√Ω danh m·ª•c",
            "Ph√¢n t√≠ch t√†i ch√≠nh",
            "Qu·∫£n tr·ªã r·ªßi ro",
            "T√†i ch√≠nh qu·ªëc t·∫ø",
            "FinTech v√† Ng√¢n h√†ng s·ªë"
          ]
        }
      ],
      icon: "üìö",
      color: "from-purple-500 to-violet-500",
      bgColor: "from-purple-50 to-violet-50",
      position: "left",
      modalContent: (
        <div className="space-y-6">
          {/* Header v·ªõi gradient background */}
          <div className="p-6 rounded-t-2xl -m-6 mb-6">
            <div className="flex items-center gap-3 mb-3">
              <div className="text-3xl">üìö</div>
              <h3 className="text-2xl font-bold">C·∫•u tr√∫c ch∆∞∆°ng tr√¨nh: Kh·ªëi ki·∫øn th·ª©c</h3>
            </div>
            <p className="leading-relaxed">Ch∆∞∆°ng tr√¨nh ƒë∆∞·ª£c t·ªï ch·ª©c theo c√°c kh·ªëi ki·∫øn th·ª©c khoa h·ªçc, c√¢n b·∫±ng gi·ªØa n·ªÅn t·∫£ng v√† chuy√™n m√¥n.</p>
          </div>

          {/* Content v·ªõi improved layout */}
          <div className="px-6 pb-6 space-y-6">
            <div className="grid gap-6">
              {[
                {
                  title: "Kh·ªëi ki·∫øn th·ª©c c∆° b·∫£n",
                  icon: "üèõÔ∏è",
                  color: "from-blue-50 to-indigo-50",
                  borderColor: "border-blue-200",
                  subjects: [
                    "Tri·∫øt h·ªçc M√°c - L√™nin",
                    "Kinh t·∫ø ch√≠nh tr·ªã M√°c - L√™nin",
                    "Ch·ªß nghƒ©a x√£ h·ªôi khoa h·ªçc",
                    "L·ªãch s·ª≠ ƒê·∫£ng C·ªông s·∫£n Vi·ªát Nam",
                    "T∆∞ t∆∞·ªüng H·ªì Ch√≠ Minh",
                    "To√°n cao c·∫•p 1 & 2",
                    "L√Ω thuy·∫øt x√°c su·∫•t v√† th·ªëng k√™",
                    "Ph√°p lu·∫≠t ƒë·∫°i c∆∞∆°ng"
                  ]
                },
                {
                  title: "Kh·ªëi ki·∫øn th·ª©c chuy√™n ng√†nh",
                  icon: "üíº",
                  color: "from-emerald-50 to-teal-50",
                  borderColor: "border-emerald-200",
                  subjects: [
                    "T√†i ch√≠nh doanh nghi·ªáp",
                    "Ng√¢n h√†ng th∆∞∆°ng m·∫°i",
                    "Th·ªã tr∆∞·ªùng t√†i ch√≠nh",
                    "ƒê·∫ßu t∆∞ v√† qu·∫£n l√Ω danh m·ª•c",
                    "Ph√¢n t√≠ch t√†i ch√≠nh",
                    "Qu·∫£n tr·ªã r·ªßi ro",
                    "T√†i ch√≠nh qu·ªëc t·∫ø",
                    "FinTech v√† Ng√¢n h√†ng s·ªë"
                  ]
                }
              ].map((block, blockIndex) => (
                <div key={blockIndex} className={`bg-gradient-to-br ${block.color} p-6 rounded-xl border ${block.borderColor} hover:shadow-lg transition-all duration-300`}>
                  <div className="flex items-center gap-3 mb-4">
                    <div className="text-2xl">{block.icon}</div>
                    <h4 className="font-bold text-slate-800 text-lg flex items-center gap-2">
                      <div className="w-2 h-2 bg-purple-500 rounded-full"></div>
                      {block.title}
                    </h4>
                  </div>
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
                    {block.subjects.map((subject, subIndex) => (
                      <div key={subIndex} className="flex items-center gap-2 p-2 bg-white/50 rounded-lg hover:bg-white/80 transition-colors">
                        <div className="w-1.5 h-1.5 bg-slate-400 rounded-full flex-shrink-0"></div>
                        <span className="text-slate-700 text-sm font-medium">{subject}</span>
                      </div>
                    ))}
                  </div>
                </div>
              ))}
            </div>

            {/* Summary section */}
            <div className="bg-gradient-to-r from-amber-50 to-yellow-50 p-5 rounded-xl border border-amber-200">
              <div className="flex items-center gap-2 mb-3">
                <div className="text-xl">üìä</div>
                <h4 className="font-bold text-slate-800">T·ªïng quan ch∆∞∆°ng tr√¨nh</h4>
              </div>
              <div className="grid grid-cols-2 md:grid-cols-4 gap-4 text-center">
                <div className="bg-white/60 p-3 rounded-lg">
                  <div className="text-2xl font-bold text-blue-600">8</div>
                  <div className="text-xs text-slate-600">M√¥n c∆° b·∫£n</div>
                </div>
                <div className="bg-white/60 p-3 rounded-lg">
                  <div className="text-2xl font-bold text-emerald-600">8</div>
                  <div className="text-xs text-slate-600">M√¥n chuy√™n ng√†nh</div>
                </div>
                <div className="bg-white/60 p-3 rounded-lg">
                  <div className="text-2xl font-bold text-purple-600">4</div>
                  <div className="text-xs text-slate-600">NƒÉm h·ªçc</div>
                </div>
                <div className="bg-white/60 p-3 rounded-lg">
                  <div className="text-2xl font-bold text-orange-600">120</div>
                  <div className="text-xs text-slate-600">T√≠n ch·ªâ</div>
                </div>
              </div>
            </div>
          </div>
        </div>
      )
    },
    {
      id: 3,
      phase: "ƒê·∫∑c ƒëi·ªÉm ch∆∞∆°ng tr√¨nh",
      title: "Ch·∫•t l∆∞·ª£ng cao & Th·ª±c ti·ªÖn",
      subtitle: "Chu·∫©n qu·ªëc t·∫ø v√† ·ª©ng d·ª•ng",
      description: "Ch∆∞∆°ng tr√¨nh CLC v·ªõi ti√™u chu·∫©n qu·ªëc t·∫ø, t√≠ch h·ª£p c√¥ng ngh·ªá v√† ƒë·ªãnh h∆∞·ªõng th·ª±c ti·ªÖn m·∫°nh m·∫Ω.",
      features: [
        {
          title: "Ch∆∞∆°ng tr√¨nh CLC",
          points: [
            "Thi·∫øt k·∫ø theo ti√™u chu·∫©n ch·∫•t l∆∞·ª£ng cao",
            "Th√†nh ph·∫ßn ti·∫øng Anh b√°n ph·∫ßn",
            "T√≠ch h·ª£p ki·∫øn th·ª©c qu·ªëc t·∫ø"
          ]
        },
        {
          title: "ƒê·ªãnh h∆∞·ªõng th·ª±c ti·ªÖn",
          points: [
            "K·∫øt h·ª£p l√Ω thuy·∫øt v√† th·ª±c h√†nh",
            "Ph√°t tri·ªÉn nƒÉng l·ª±c nghi√™n c·ª©u",
            "Th√≠ch ·ª©ng k·ªπ nguy√™n s·ªë"
          ]
        }
      ],
      icon: "‚≠ê",
      color: "from-amber-500 to-orange-500",
      bgColor: "from-amber-50 to-orange-50",
      position: "right",
      modalContent: (
        <div className="space-y-6">
          {/* Header v·ªõi gradient background */}
          <div className="p-6 rounded-t-2xl -m-6 mb-6">
            <div className="flex items-center gap-3 mb-3">
              <div className="text-3xl">‚≠ê</div>
              <h3 className="text-2xl font-bold">ƒê·∫∑c ƒëi·ªÉm ch∆∞∆°ng tr√¨nh: Ch·∫•t l∆∞·ª£ng cao & Th·ª±c ti·ªÖn</h3>
            </div>
            <p className="leading-relaxed">Ch∆∞∆°ng tr√¨nh CLC v·ªõi ti√™u chu·∫©n qu·ªëc t·∫ø, t√≠ch h·ª£p c√¥ng ngh·ªá v√† ƒë·ªãnh h∆∞·ªõng th·ª±c ti·ªÖn m·∫°nh m·∫Ω.</p>
          </div>

          {/* Content v·ªõi improved layout */}
          <div className="px-6 pb-6 space-y-6">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              {[
                {
                  title: "Ch∆∞∆°ng tr√¨nh CLC",
                  icon: "üèÜ",
                  color: "from-blue-50 to-indigo-50",
                  borderColor: "border-blue-200",
                  accentColor: "bg-blue-500",
                  points: [
                    "Thi·∫øt k·∫ø theo ti√™u chu·∫©n ch·∫•t l∆∞·ª£ng cao",
                    "Th√†nh ph·∫ßn ti·∫øng Anh b√°n ph·∫ßn",
                    "T√≠ch h·ª£p ki·∫øn th·ª©c qu·ªëc t·∫ø"
                  ]
                },
                {
                  title: "ƒê·ªãnh h∆∞·ªõng th·ª±c ti·ªÖn",
                  icon: "üöÄ",
                  color: "from-emerald-50 to-green-50",
                  borderColor: "border-emerald-200",
                  accentColor: "bg-emerald-500",
                  points: [
                    "K·∫øt h·ª£p l√Ω thuy·∫øt v√† th·ª±c h√†nh",
                    "Ph√°t tri·ªÉn nƒÉng l·ª±c nghi√™n c·ª©u",
                    "Th√≠ch ·ª©ng k·ªπ nguy√™n s·ªë"
                  ]
                }
              ].map((feature, featureIndex) => (
                <div key={featureIndex} className={`bg-gradient-to-br ${feature.color} p-6 rounded-xl border ${feature.borderColor} hover:shadow-lg transition-all duration-300`}>
                  <div className="flex items-center gap-3 mb-4">
                    <div className="text-2xl">{feature.icon}</div>
                    <h4 className="font-bold text-slate-800 text-lg flex items-center gap-2">
                      <div className={`w-2 h-2 ${feature.accentColor} rounded-full`}></div>
                      {feature.title}
                    </h4>
                  </div>
                  <div className="space-y-3">
                    {feature.points.map((point, pointIndex) => (
                      <div key={pointIndex} className="flex items-start gap-3 p-3 bg-white/60 rounded-lg hover:bg-white/90 transition-all duration-200 group">
                        <div className="w-2 h-2 bg-amber-400 rounded-full flex-shrink-0 mt-2 group-hover:scale-125 transition-transform"></div>
                        <span className="text-slate-700 font-medium leading-relaxed">{point}</span>
                      </div>
                    ))}
                  </div>
                </div>
              ))}
            </div>

            {/* Highlights section */}
            <div className="bg-gradient-to-r from-rose-50 to-pink-50 p-6 rounded-xl border border-rose-200">
              <div className="flex items-center gap-2 mb-4">
                <div className="text-xl">‚ú®</div>
                <h4 className="font-bold text-slate-800 text-lg">ƒêi·ªÉm n·ªïi b·∫≠t c·ªßa ch∆∞∆°ng tr√¨nh</h4>
              </div>
              <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                <div className="text-center p-4 bg-white/60 rounded-lg hover:bg-white/90 transition-colors">
                  <div className="text-2xl mb-2">üåç</div>
                  <div className="font-semibold text-slate-800 mb-1">Chu·∫©n qu·ªëc t·∫ø</div>
                  <div className="text-xs text-slate-600">Thi·∫øt k·∫ø theo ti√™u chu·∫©n to√†n c·∫ßu</div>
                </div>
                <div className="text-center p-4 bg-white/60 rounded-lg hover:bg-white/90 transition-colors">
                  <div className="text-2xl mb-2">üíª</div>
                  <div className="font-semibold text-slate-800 mb-1">C√¥ng ngh·ªá hi·ªán ƒë·∫°i</div>
                  <div className="text-xs text-slate-600">T√≠ch h·ª£p FinTech v√† Digital Banking</div>
                </div>
                <div className="text-center p-4 bg-white/60 rounded-lg hover:bg-white/90 transition-colors">
                  <div className="text-2xl mb-2">üéØ</div>
                  <div className="font-semibold text-slate-800 mb-1">Th·ª±c ti·ªÖn cao</div>
                  <div className="text-xs text-slate-600">K·∫øt n·ªëi doanh nghi·ªáp v√† th·ªã tr∆∞·ªùng</div>
                </div>
              </div>
            </div>
          </div>
        </div>
      )
    }
  ];

  return (
    <motion.section
      ref={ref}
      className="py-6 bg-gradient-to-b from-zinc-50 via-gray-100 to-zinc-50 relative overflow-hidden"
      initial="hidden"
      animate={isInView ? "visible" : "hidden"}
      variants={containerVariants}
    >
      <motion.div
        className="absolute inset-0 bg-gradient-to-br from-blue-100/30 to-purple-100/30"
        initial={{ opacity: 0, scale: 1.2 }}
        animate={{ opacity: 1, scale: 1 }}
        transition={{ duration: 2 }}
      />

      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10">
        {/* Header */}
        <motion.div
          className="text-center mb-16"
          variants={headerVariants}
        >
          <div className='w-full flex justify-end'>
            <PointerHighlight>
              <motion.h2
                className="text-3xl sm:text-4xl lg:text-5xl font-bold text-slate-800 p-4"
                whileHover={{
                  scale: 1.05,
                  color: "#3b82f6",
                  transition: { duration: 0.3 }
                }}
              >
                C·∫•u tr√∫c Ch∆∞∆°ng tr√¨nh ƒê√†o t·∫°o
              </motion.h2>
            </PointerHighlight>
          </div>
          <motion.div
            className="max-w-3xl mx-auto"
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.5, duration: 0.8 }}
          >
            <TextGenerateEffect
              words="V·ªõi c·∫•u tr√∫c khoa h·ªçc, t√≠ch h·ª£p y·∫øu t·ªë qu·ªëc t·∫ø v√† ƒë·ªãnh h∆∞·ªõng th·ª±c ti·ªÖn m·∫°nh m·∫Ω."
              className="text-lg text-slate-600"
            />
          </motion.div>
        </motion.div>

        {/* Timeline */}
        <motion.div className="relative mb-16" variants={timelineVariants}></motion.div>
        {/* Central line - Hidden on mobile */}
        <motion.div
          className="hidden md:block absolute left-1/2 transform -translate-x-1/2 w-1 h-full bg-gradient-to-b from-blue-400 via-green-400 via-purple-400 to-orange-400 rounded-full"
          initial={{ scaleY: 0, originY: 0 }}
          animate={{ scaleY: 1 }}
          transition={{ duration: 2, delay: 0.5 }}
        />

        {/* Timeline items */}
        <div className="space-y-8 md:space-y-16">
          {programSections.map((section, index) => (
            <motion.div
              key={section.id}
              className={cn(
                "relative flex items-center",
                // Mobile: center everything, Desktop: alternate left/right
                "justify-center md:justify-start",
                section.position === "right" && "md:justify-end"
              )}
              initial={{ opacity: 0, y: 100 }}
              whileInView={{
                opacity: 1,
                y: 0,
                transition: {
                  type: "spring",
                  stiffness: 100,
                  damping: 15,
                  delay: index * 0.2
                }
              }}
              viewport={{ once: true, amount: 0.3 }}
            >
              {/* Timeline dot */}
              <div className={cn(
                "z-20",
                // Mobile: relative positioning, Desktop: absolute center
                "relative md:absolute md:left-1/2 md:transform md:-translate-x-1/2",
                // Mobile: show above content
                "mb-4 md:mb-0"
              )}>
                <motion.div
                  className={cn(
                    "w-12 h-12 md:w-16 md:h-16 rounded-full flex items-center justify-center text-lg md:text-2xl cursor-pointer transition-all duration-300 border-4 border-white shadow-lg mx-auto",
                    `bg-gradient-to-b ${section.color}`,
                    activeSection === section.id ? "scale-125 shadow-2xl" : "hover:scale-110"
                  )}
                  onClick={() => setActiveSection(activeSection === section.id ? -1 : section.id)}
                  initial={{ scale: 0, rotate: -180 }}
                  whileInView={{
                    scale: 1,
                    rotate: 0,
                    transition: {
                      type: "spring",
                      stiffness: 200,
                      damping: 15,
                      delay: index * 0.2 + 0.3
                    }
                  }}
                  viewport={{ once: true }}
                  whileHover={{
                    scale: 1.2,
                    rotate: 10,
                    transition: { duration: 0.3 }
                  }}
                  whileTap={{ scale: 0.95 }}
                >
                  {section.icon}
                </motion.div>
              </div>

              {/* Content card */}
              <Drawer>
                <motion.div
                  className={cn(
                    "w-full transition-all duration-500",
                    // Mobile: full width with padding, Desktop: max-width with side padding
                    "px-4 md:max-w-lg",
                    // Desktop positioning
                    section.position === "left" ? "md:mr-auto md:pr-16" : "md:ml-auto md:pl-16",
                    activeSection === section.id ? "scale-105" : "hover:scale-102"
                  )}
                  initial={{
                    opacity: 0,
                    x: section.position === "left" ? -100 : 100,
                    y: 50
                  }}
                  whileInView={{
                    opacity: 1,
                    x: 0,
                    y: 0,
                    transition: {
                      type: "spring",
                      stiffness: 100,
                      damping: 15,
                      delay: index * 0.2 + 0.5
                    }
                  }}
                  viewport={{ once: true, amount: 0.3 }}
                  whileHover={{
                    scale: 1.02,
                    y: -5,
                    transition: { duration: 0.3 }
                  }}
                >
                  <motion.div
                    className={cn(
                      "bg-white/80 backdrop-blur-sm rounded-2xl md:rounded-3xl p-4 md:p-8 border border-white/50 shadow-xl transition-all duration-300",
                      activeSection === section.id ? "shadow-2xl ring-4 ring-blue-500/20" : ""
                    )}
                    whileHover={{
                      boxShadow: "0 25px 50px rgba(0, 0, 0, 0.15)",
                      transition: { duration: 0.3 }
                    }}
                  >
                    {/* Header */}
                    <div className="mb-4 md:mb-6">
                      <div className={cn(
                        "inline-flex items-center px-3 py-1.5 md:px-4 md:py-2 rounded-xl md:rounded-2xl text-white font-bold text-xs md:text-sm mb-2 md:mb-3 shadow-lg",
                        `bg-gradient-to-r ${section.color}`
                      )}>
                        {section.phase}
                      </div>
                      <h3 className="text-lg md:text-xl font-bold text-slate-800 mb-1 md:mb-2">{section.title}</h3>
                      <p className="text-xs md:text-sm font-medium text-slate-600">{section.subtitle}</p>
                    </div>

                    {/* Description */}
                    <p className="text-sm md:text-base text-slate-700 mb-4 md:mb-6 leading-relaxed">{section.description}</p>

                    {/* Click to view more indicator */}
                    <DrawerTrigger className="w-full p-0 bg-transparent border-0 hover:bg-transparent cursor-pointer">
                      <div className="text-center">
                        <span className="text-xs text-blue-600 font-medium">Nh·∫•n ƒë·ªÉ xem chi ti·∫øt ‚Üí</span>
                      </div>
                    </DrawerTrigger>

                  </motion.div>
                </motion.div>
                <DrawerContent className="w-full mx-auto">
                  <DrawerHeader className="flex flex-row items-center justify-between">
                    <div>
                      <DrawerTitle className="text-2xl font-bold">{section.title}</DrawerTitle>
                    </div>
                    <DrawerClose className="p-2 hover:bg-slate-100 rounded-full transition-colors">
                      <X className="w-5 h-5" />
                    </DrawerClose>
                  </DrawerHeader>
                  <div className="px-4 pb-4 max-h-[70vh] overflow-y-auto">
                    {section.modalContent}
                  </div>
                </DrawerContent>
              </Drawer>
            </motion.div>
          ))}
        </div>
      </div>
    </motion.section>
  );
}